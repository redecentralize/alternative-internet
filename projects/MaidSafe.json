{
    "ohloh": {
        "main_language": "C++", 
        "max_month": "2010-11-01T00:00:00Z", 
        "description": "Kademlia DHT with NAT traversalFull kademlia implementation (with many enhancements) Nat traversal (hole punching, UpNP, nat-pmp all included), (soon to be enhanced with relay capabilities allowing close to 100% penetration. Think ICE with no servers! TCP emulation with fault tolerance, retransmits and fairness congestion control algorithms (can transfer over 20 times faster than TCP in some cases) No servers even for STUN functionality (all handled in kademlia) Cryptopp included (create digitally signed and secured p2p networks) Many utility methods and tools included Uses cross platform build environment (with instructions)  Tested on windows,OSX and linux  \n\nWe are looking for contributors !!maidsafe-dht provides a transport layer (currently UDT - it is included as a CVS included directory and updated with mainstream UDT code, many thanks to Yunhong Gu and his project http://udt.sourceforge.net/index.html) with a fully functional Kademlia DHT and RPC layer (RPC and message serialisation requires Google protocol buffers, a magnificent project).  \n\nmaidsafe-dht includes some enhancements to kademlia namely force-k (force partner bucket to contain the most recent closest nodes) and a downlist modification (notification of dead nodes in searches) to increase the reliability significantly (from 13/20 live nodes to 19.8/20 for a k=20).   \n\nHaving spent significant time researching and developing many such systems (in Python and C / C++) we have now settled on this system and would like to ensure it is as robust as possible. \n\nThis has taken us several months to pull this together, and we are delighted to offer this to the community in the hope it will be improved (we know it certainly can be improved upon) and will be useful for creating actual clouds and true p2p with no server networking.  \n\nWe would like other companies to benefit from the significant investment we have made in order to create such a system.  \n\nBuildPlease see here for build instructions. \n\nParticularsAll kademlia values and RPC's can be extended and in case of kadamelia Alpha, Beta and K these can all be set per project as required. UPnP can be chosen as a default option for any knode. \n\nmaidsafe-dht uses gtest to test code and cmake for builds and installer and has a public dashboard (http://dash.maidsafe.net) to test all changes against several operating systems (mainly Linux, Apple and Microsoft).  \n\nNo changes without tests will be accepted, bug fixes with existing tests are fine though :-). \n\nIf you like this project please help us by visiting http://www.maidsafe.net and signing up for the beta release of Perpetual Data to see the whole thing in action.  \n\nThanks David Irvine", 
        "tags": [
            "udp", 
            "gtest", 
            "maidsafe", 
            "hole-punching", 
            "kademlia", 
            "udt", 
            "c", 
            "nat-traversal", 
            "protocol-buffers", 
            "p2p"
        ], 
        "total_code_lines": 111118, 
        "total_contributor_count": 9, 
        "twelve_month_contributor_count": 0, 
        "updated_at": "2014-04-09T10:04:01Z", 
        "analysis": "19708789", 
        "min_month": "2009-05-01T00:00:00Z", 
        "factoids": [
            "Young, but established codebase", 
            "Few source code comments", 
            "Stable Y-O-Y development activity", 
            "No recent development activity"
        ], 
        "twelve_month_commit_count": 0, 
        "total_commit_count": 436, 
        "id": "342125", 
        "name": "maidsafe-dht"
    }, 
    "description": "The [MaidSafe](http://maidsafe.net) network is a fully distributed platform on which application developers can build distributed applications. The network is made up by individual users who contribute storage, computing power and bandwidth to what is a global, public cloud.", 
    "name": "MaidSafe"
}